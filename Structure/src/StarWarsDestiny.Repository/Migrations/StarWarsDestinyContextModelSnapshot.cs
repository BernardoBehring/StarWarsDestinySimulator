// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StarWarsDestiny.Repository.Context;

namespace StarWarsDestiny.Repository.Migrations
{
    [DbContext(typeof(StarWarsDestinyContext))]
    partial class StarWarsDestinyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("StarWarsDestiny.Model.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.ActionPhase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoundId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ActionPhase");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Affiliation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Affiliation");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.BalanceForce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardLegalityId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ElitePoints")
                        .HasColumnName("ElitePoints");

                    b.Property<int?>("Health")
                        .HasColumnName("Health");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int?>("Points")
                        .HasColumnName("Points");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CardLegalityId");

                    b.ToTable("BalanceForce");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Battlefield", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BattlefieldCardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("GameId");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BattlefieldCardId");

                    b.ToTable("BattleField");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AffiliationId");

                    b.Property<int?>("ArtistId");

                    b.Property<int>("ColorId");

                    b.Property<int?>("Cost");

                    b.Property<string>("DataCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DieId");

                    b.Property<int?>("ElitePoints");

                    b.Property<int>("FactionId");

                    b.Property<string>("Flavor")
                        .IsUnicode(false);

                    b.Property<int?>("Health");

                    b.Property<string>("Image")
                        .IsUnicode(false);

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCharacter");

                    b.Property<bool>("IsSuport");

                    b.Property<bool?>("IsUnique");

                    b.Property<bool>("IsUpgrade");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Number");

                    b.Property<int?>("Points");

                    b.Property<int>("RarityId");

                    b.Property<int>("SetStarWarsId");

                    b.Property<string>("Subtitle")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Text")
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("UrlImage")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("AffiliationId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("ColorId");

                    b.HasIndex("DieId")
                        .IsUnique();

                    b.HasIndex("FactionId");

                    b.HasIndex("RarityId");

                    b.HasIndex("SetStarWarsId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.CardDeck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardId");

                    b.Property<int>("DeckId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("DeckId");

                    b.ToTable("CardDeck");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.CardLegality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsLegal");

                    b.Property<int>("LegalityId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("LegalityId");

                    b.ToTable("CardLegality");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.CardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("TypeId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("TypeId");

                    b.ToTable("CardType");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Deck");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.DiceAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DiceAction");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.DiceFace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cost");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("DiceActionId");

                    b.Property<int>("DieId");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsModifier");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DiceActionId");

                    b.HasIndex("DieId");

                    b.ToTable("DiceFace");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Die", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Die");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Effect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("EnumEffect");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Effect");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Faction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Faction");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BattleFieldId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("SetUpId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BattleFieldId")
                        .IsUnique();

                    b.ToTable("Game");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("EnumKeyWords");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Text")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Keyword");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Legality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Legality");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DeckId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("GameId");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlayerId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("DeckId");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerGame");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerGameCharacterShield", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterCardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlayerGameId");

                    b.Property<int>("QtyShield");

                    b.Property<int>("SetUpId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CharacterCardId");

                    b.HasIndex("PlayerGameId");

                    b.HasIndex("SetUpId");

                    b.ToTable("PlayerGameCharacterShield");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerGameIniciative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("Iniciative");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlayerGameId");

                    b.Property<int>("SetUpId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PlayerGameId");

                    b.HasIndex("SetUpId");

                    b.ToTable("PlayerGameIniciative");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlayerGameId");

                    b.Property<int>("Resources");

                    b.Property<int>("RoundGameId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PlayerGameId");

                    b.HasIndex("RoundGameId");

                    b.ToTable("PlayerRound");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundCardInDiscard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlayerRoundId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("PlayerRoundId");

                    b.ToTable("PlayerRoundCardInDiscard");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundCardInHand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlayerRoundId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("PlayerRoundId");

                    b.ToTable("PlayerRoundCardInHand");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundCardInLimbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlayerRoundId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("PlayerRoundId");

                    b.ToTable("PlayerRoundCardInLimbo");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundCardInPlay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<bool>("Exausted");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlayerRoundId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("PlayerRoundId");

                    b.ToTable("PlayerRoundCardInPlay");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundCardInPlayUpgrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanBeExausted");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<bool>("Exausted");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlayerRoundCardInPlayId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PlayerRoundCardInPlayId");

                    b.ToTable("PlayerRoundCardInPlayUpgrade");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundRolledDice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("DiceFaceId");

                    b.Property<int>("DieId");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlayerRoundId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("DiceFaceId");

                    b.HasIndex("DieId");

                    b.HasIndex("PlayerRoundId");

                    b.ToTable("PlayerRoundRolledDice");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Rarity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Rarity");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ActionPhaseId");

                    b.Property<bool>("BattleFieldClaimed");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int?>("PlayerGameIdClaimedBattlefield");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpkeepPhaseId");

                    b.HasKey("Id");

                    b.HasIndex("ActionPhaseId")
                        .IsUnique();

                    b.HasIndex("PlayerGameIdClaimedBattlefield");

                    b.ToTable("Round");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.RoundGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("GameId");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoundId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("RoundId");

                    b.ToTable("RoundGame");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.SetStarWars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("SetStarWars");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.SetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BattlefieldChoosedId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("GameId");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BattlefieldChoosedId");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("SetUp");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Turn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActionPhaseId");

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("Number");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ActionPhaseId");

                    b.ToTable("Turn");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.UpkeepPhase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DeletedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertedIn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoundId");

                    b.Property<DateTime?>("UpdatedIn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("RoundId")
                        .IsUnique();

                    b.ToTable("UpkeepPhase");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.BalanceForce", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.CardLegality", "CardLegality")
                        .WithMany("BalanceForces")
                        .HasForeignKey("CardLegalityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Battlefield", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card", "BattlefieldCard")
                        .WithMany("Battlefields")
                        .HasForeignKey("BattlefieldCardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Card", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Affiliation", "Affiliation")
                        .WithMany("Cards")
                        .HasForeignKey("AffiliationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Artist", "Artist")
                        .WithMany("Cards")
                        .HasForeignKey("ArtistId");

                    b.HasOne("StarWarsDestiny.Model.Color", "Color")
                        .WithMany("Cards")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Die", "Die")
                        .WithOne("Card")
                        .HasForeignKey("StarWarsDestiny.Model.Card", "DieId");

                    b.HasOne("StarWarsDestiny.Model.Faction", "Faction")
                        .WithMany("Cards")
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Rarity", "Rarity")
                        .WithMany("Cards")
                        .HasForeignKey("RarityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.SetStarWars", "SetStarWars")
                        .WithMany("Cards")
                        .HasForeignKey("SetStarWarsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.CardDeck", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card", "Card")
                        .WithMany("CardDecks")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Deck", "Deck")
                        .WithMany("CardDecks")
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.CardLegality", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card", "Card")
                        .WithMany("CardLegalities")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Legality", "Legality")
                        .WithMany("CardLegalities")
                        .HasForeignKey("LegalityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.CardType", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card", "Card")
                        .WithMany("CardTypes")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Type", "Type")
                        .WithMany("CardTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.DiceFace", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.DiceAction", "DiceAction")
                        .WithMany("DiceFaces")
                        .HasForeignKey("DiceActionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Die", "Die")
                        .WithMany("DiceFaces")
                        .HasForeignKey("DieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Effect", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card")
                        .WithMany("Effects")
                        .HasForeignKey("CardId");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Game", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Battlefield", "Battlefield")
                        .WithOne("Game")
                        .HasForeignKey("StarWarsDestiny.Model.Game", "BattleFieldId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Keyword", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card")
                        .WithMany("Keywords")
                        .HasForeignKey("CardId");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerGame", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Deck", "Deck")
                        .WithMany("PlayerGames")
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Game", "Game")
                        .WithMany("PlayerGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Player", "Player")
                        .WithMany("PlayerGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerGameCharacterShield", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card", "CharacterCard")
                        .WithMany("PlayerGameCharacterShields")
                        .HasForeignKey("CharacterCardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.PlayerGame", "PlayerGame")
                        .WithMany("PlayerGameCharacterShields")
                        .HasForeignKey("PlayerGameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.SetUp", "SetUp")
                        .WithMany("PlayerGameCharacterShields")
                        .HasForeignKey("SetUpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerGameIniciative", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.PlayerGame", "PlayerGame")
                        .WithMany("PlayerGameIniciatives")
                        .HasForeignKey("PlayerGameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.SetUp", "SetUp")
                        .WithMany("PlayerGameIniciatives")
                        .HasForeignKey("SetUpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRound", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.PlayerGame", "PlayerGame")
                        .WithMany("PlayerRounds")
                        .HasForeignKey("PlayerGameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.RoundGame", "RoundGame")
                        .WithMany("PlayerRounds")
                        .HasForeignKey("RoundGameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundCardInDiscard", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card", "Card")
                        .WithMany("PlayerRoundCardInDiscards")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.PlayerRound", "PlayerRound")
                        .WithMany("DiscardPile")
                        .HasForeignKey("PlayerRoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundCardInHand", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card", "Card")
                        .WithMany("PlayerRoundCardInHands")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.PlayerRound", "PlayerRound")
                        .WithMany("CardsInHand")
                        .HasForeignKey("PlayerRoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundCardInLimbo", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card", "Card")
                        .WithMany("PlayerRoundCardInLimbo")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.PlayerRound", "PlayerRound")
                        .WithMany("Limbo")
                        .HasForeignKey("PlayerRoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundCardInPlay", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Card", "Card")
                        .WithMany("PlayerRoundCardsInPlay")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.PlayerRound", "PlayerRound")
                        .WithMany("CardsInPlay")
                        .HasForeignKey("PlayerRoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundCardInPlayUpgrade", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.PlayerRoundCardInPlay", "PlayerRoundCardInPlay")
                        .WithMany("Upgrades")
                        .HasForeignKey("PlayerRoundCardInPlayId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.PlayerRoundRolledDice", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.DiceFace", "DiceFace")
                        .WithMany("PlayerRoundRolledDices")
                        .HasForeignKey("DiceFaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Die", "Die")
                        .WithMany("PlayerRoundRolledDices")
                        .HasForeignKey("DieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.PlayerRound", "PlayerRound")
                        .WithMany("DicePool")
                        .HasForeignKey("PlayerRoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Round", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.ActionPhase", "ActionPhase")
                        .WithOne("Round")
                        .HasForeignKey("StarWarsDestiny.Model.Round", "ActionPhaseId");

                    b.HasOne("StarWarsDestiny.Model.PlayerGame", "PlayerGameClaimedBattleField")
                        .WithMany("RoundsClaimedBattleField")
                        .HasForeignKey("PlayerGameIdClaimedBattlefield");
                });

            modelBuilder.Entity("StarWarsDestiny.Model.RoundGame", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Game", "Game")
                        .WithMany("Rounds")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Round", "Round")
                        .WithMany("RoundGames")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.SetUp", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Battlefield", "BattlefieldChoosed")
                        .WithMany("SetUps")
                        .HasForeignKey("BattlefieldChoosedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StarWarsDestiny.Model.Game", "Game")
                        .WithOne("SetUp")
                        .HasForeignKey("StarWarsDestiny.Model.SetUp", "GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.Turn", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.ActionPhase", "ActionPhase")
                        .WithMany("Turn")
                        .HasForeignKey("ActionPhaseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StarWarsDestiny.Model.UpkeepPhase", b =>
                {
                    b.HasOne("StarWarsDestiny.Model.Round", "Round")
                        .WithOne("UpkeepPhase")
                        .HasForeignKey("StarWarsDestiny.Model.UpkeepPhase", "RoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
